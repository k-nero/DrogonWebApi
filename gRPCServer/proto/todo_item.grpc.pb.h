// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: todo_item.proto
#ifndef GRPC_todo_5fitem_2eproto__INCLUDED
#define GRPC_todo_5fitem_2eproto__INCLUDED

#include "todo_item.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace todo_item {

class TodoItemService final {
 public:
  static constexpr char const* service_full_name() {
    return "todo_item.TodoItemService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status GetTodoItems(::grpc::ClientContext* context, const ::todo_item::GetTodoItemsRequest& request, ::todo_item::GetTodoItemsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::GetTodoItemsResponse>> AsyncGetTodoItems(::grpc::ClientContext* context, const ::todo_item::GetTodoItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::GetTodoItemsResponse>>(AsyncGetTodoItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::GetTodoItemsResponse>> PrepareAsyncGetTodoItems(::grpc::ClientContext* context, const ::todo_item::GetTodoItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::GetTodoItemsResponse>>(PrepareAsyncGetTodoItemsRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateTodoItem(::grpc::ClientContext* context, const ::todo_item::CreateTodoItemRequest& request, ::todo_item::CreateTodoItemResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::CreateTodoItemResponse>> AsyncCreateTodoItem(::grpc::ClientContext* context, const ::todo_item::CreateTodoItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::CreateTodoItemResponse>>(AsyncCreateTodoItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::CreateTodoItemResponse>> PrepareAsyncCreateTodoItem(::grpc::ClientContext* context, const ::todo_item::CreateTodoItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::CreateTodoItemResponse>>(PrepareAsyncCreateTodoItemRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateTodoItem(::grpc::ClientContext* context, const ::todo_item::UpdateTodoItemRequest& request, ::todo_item::UpdateTodoItemResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::UpdateTodoItemResponse>> AsyncUpdateTodoItem(::grpc::ClientContext* context, const ::todo_item::UpdateTodoItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::UpdateTodoItemResponse>>(AsyncUpdateTodoItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::UpdateTodoItemResponse>> PrepareAsyncUpdateTodoItem(::grpc::ClientContext* context, const ::todo_item::UpdateTodoItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::UpdateTodoItemResponse>>(PrepareAsyncUpdateTodoItemRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteTodoItem(::grpc::ClientContext* context, const ::todo_item::DeleteTodoItemRequest& request, ::todo_item::DeleteTodoItemResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::DeleteTodoItemResponse>> AsyncDeleteTodoItem(::grpc::ClientContext* context, const ::todo_item::DeleteTodoItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::DeleteTodoItemResponse>>(AsyncDeleteTodoItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::DeleteTodoItemResponse>> PrepareAsyncDeleteTodoItem(::grpc::ClientContext* context, const ::todo_item::DeleteTodoItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::DeleteTodoItemResponse>>(PrepareAsyncDeleteTodoItemRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void GetTodoItems(::grpc::ClientContext* context, const ::todo_item::GetTodoItemsRequest* request, ::todo_item::GetTodoItemsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetTodoItems(::grpc::ClientContext* context, const ::todo_item::GetTodoItemsRequest* request, ::todo_item::GetTodoItemsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateTodoItem(::grpc::ClientContext* context, const ::todo_item::CreateTodoItemRequest* request, ::todo_item::CreateTodoItemResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateTodoItem(::grpc::ClientContext* context, const ::todo_item::CreateTodoItemRequest* request, ::todo_item::CreateTodoItemResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateTodoItem(::grpc::ClientContext* context, const ::todo_item::UpdateTodoItemRequest* request, ::todo_item::UpdateTodoItemResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateTodoItem(::grpc::ClientContext* context, const ::todo_item::UpdateTodoItemRequest* request, ::todo_item::UpdateTodoItemResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteTodoItem(::grpc::ClientContext* context, const ::todo_item::DeleteTodoItemRequest* request, ::todo_item::DeleteTodoItemResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteTodoItem(::grpc::ClientContext* context, const ::todo_item::DeleteTodoItemRequest* request, ::todo_item::DeleteTodoItemResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::GetTodoItemsResponse>* AsyncGetTodoItemsRaw(::grpc::ClientContext* context, const ::todo_item::GetTodoItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::GetTodoItemsResponse>* PrepareAsyncGetTodoItemsRaw(::grpc::ClientContext* context, const ::todo_item::GetTodoItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::CreateTodoItemResponse>* AsyncCreateTodoItemRaw(::grpc::ClientContext* context, const ::todo_item::CreateTodoItemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::CreateTodoItemResponse>* PrepareAsyncCreateTodoItemRaw(::grpc::ClientContext* context, const ::todo_item::CreateTodoItemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::UpdateTodoItemResponse>* AsyncUpdateTodoItemRaw(::grpc::ClientContext* context, const ::todo_item::UpdateTodoItemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::UpdateTodoItemResponse>* PrepareAsyncUpdateTodoItemRaw(::grpc::ClientContext* context, const ::todo_item::UpdateTodoItemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::DeleteTodoItemResponse>* AsyncDeleteTodoItemRaw(::grpc::ClientContext* context, const ::todo_item::DeleteTodoItemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::todo_item::DeleteTodoItemResponse>* PrepareAsyncDeleteTodoItemRaw(::grpc::ClientContext* context, const ::todo_item::DeleteTodoItemRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetTodoItems(::grpc::ClientContext* context, const ::todo_item::GetTodoItemsRequest& request, ::todo_item::GetTodoItemsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_item::GetTodoItemsResponse>> AsyncGetTodoItems(::grpc::ClientContext* context, const ::todo_item::GetTodoItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_item::GetTodoItemsResponse>>(AsyncGetTodoItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_item::GetTodoItemsResponse>> PrepareAsyncGetTodoItems(::grpc::ClientContext* context, const ::todo_item::GetTodoItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_item::GetTodoItemsResponse>>(PrepareAsyncGetTodoItemsRaw(context, request, cq));
    }
    ::grpc::Status CreateTodoItem(::grpc::ClientContext* context, const ::todo_item::CreateTodoItemRequest& request, ::todo_item::CreateTodoItemResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_item::CreateTodoItemResponse>> AsyncCreateTodoItem(::grpc::ClientContext* context, const ::todo_item::CreateTodoItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_item::CreateTodoItemResponse>>(AsyncCreateTodoItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_item::CreateTodoItemResponse>> PrepareAsyncCreateTodoItem(::grpc::ClientContext* context, const ::todo_item::CreateTodoItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_item::CreateTodoItemResponse>>(PrepareAsyncCreateTodoItemRaw(context, request, cq));
    }
    ::grpc::Status UpdateTodoItem(::grpc::ClientContext* context, const ::todo_item::UpdateTodoItemRequest& request, ::todo_item::UpdateTodoItemResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_item::UpdateTodoItemResponse>> AsyncUpdateTodoItem(::grpc::ClientContext* context, const ::todo_item::UpdateTodoItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_item::UpdateTodoItemResponse>>(AsyncUpdateTodoItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_item::UpdateTodoItemResponse>> PrepareAsyncUpdateTodoItem(::grpc::ClientContext* context, const ::todo_item::UpdateTodoItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_item::UpdateTodoItemResponse>>(PrepareAsyncUpdateTodoItemRaw(context, request, cq));
    }
    ::grpc::Status DeleteTodoItem(::grpc::ClientContext* context, const ::todo_item::DeleteTodoItemRequest& request, ::todo_item::DeleteTodoItemResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_item::DeleteTodoItemResponse>> AsyncDeleteTodoItem(::grpc::ClientContext* context, const ::todo_item::DeleteTodoItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_item::DeleteTodoItemResponse>>(AsyncDeleteTodoItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_item::DeleteTodoItemResponse>> PrepareAsyncDeleteTodoItem(::grpc::ClientContext* context, const ::todo_item::DeleteTodoItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_item::DeleteTodoItemResponse>>(PrepareAsyncDeleteTodoItemRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetTodoItems(::grpc::ClientContext* context, const ::todo_item::GetTodoItemsRequest* request, ::todo_item::GetTodoItemsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetTodoItems(::grpc::ClientContext* context, const ::todo_item::GetTodoItemsRequest* request, ::todo_item::GetTodoItemsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateTodoItem(::grpc::ClientContext* context, const ::todo_item::CreateTodoItemRequest* request, ::todo_item::CreateTodoItemResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateTodoItem(::grpc::ClientContext* context, const ::todo_item::CreateTodoItemRequest* request, ::todo_item::CreateTodoItemResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateTodoItem(::grpc::ClientContext* context, const ::todo_item::UpdateTodoItemRequest* request, ::todo_item::UpdateTodoItemResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateTodoItem(::grpc::ClientContext* context, const ::todo_item::UpdateTodoItemRequest* request, ::todo_item::UpdateTodoItemResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteTodoItem(::grpc::ClientContext* context, const ::todo_item::DeleteTodoItemRequest* request, ::todo_item::DeleteTodoItemResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteTodoItem(::grpc::ClientContext* context, const ::todo_item::DeleteTodoItemRequest* request, ::todo_item::DeleteTodoItemResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::todo_item::GetTodoItemsResponse>* AsyncGetTodoItemsRaw(::grpc::ClientContext* context, const ::todo_item::GetTodoItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::todo_item::GetTodoItemsResponse>* PrepareAsyncGetTodoItemsRaw(::grpc::ClientContext* context, const ::todo_item::GetTodoItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::todo_item::CreateTodoItemResponse>* AsyncCreateTodoItemRaw(::grpc::ClientContext* context, const ::todo_item::CreateTodoItemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::todo_item::CreateTodoItemResponse>* PrepareAsyncCreateTodoItemRaw(::grpc::ClientContext* context, const ::todo_item::CreateTodoItemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::todo_item::UpdateTodoItemResponse>* AsyncUpdateTodoItemRaw(::grpc::ClientContext* context, const ::todo_item::UpdateTodoItemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::todo_item::UpdateTodoItemResponse>* PrepareAsyncUpdateTodoItemRaw(::grpc::ClientContext* context, const ::todo_item::UpdateTodoItemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::todo_item::DeleteTodoItemResponse>* AsyncDeleteTodoItemRaw(::grpc::ClientContext* context, const ::todo_item::DeleteTodoItemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::todo_item::DeleteTodoItemResponse>* PrepareAsyncDeleteTodoItemRaw(::grpc::ClientContext* context, const ::todo_item::DeleteTodoItemRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetTodoItems_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateTodoItem_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateTodoItem_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteTodoItem_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status GetTodoItems(::grpc::ServerContext* context, const ::todo_item::GetTodoItemsRequest* request, ::todo_item::GetTodoItemsResponse* response);
    virtual ::grpc::Status CreateTodoItem(::grpc::ServerContext* context, const ::todo_item::CreateTodoItemRequest* request, ::todo_item::CreateTodoItemResponse* response);
    virtual ::grpc::Status UpdateTodoItem(::grpc::ServerContext* context, const ::todo_item::UpdateTodoItemRequest* request, ::todo_item::UpdateTodoItemResponse* response);
    virtual ::grpc::Status DeleteTodoItem(::grpc::ServerContext* context, const ::todo_item::DeleteTodoItemRequest* request, ::todo_item::DeleteTodoItemResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetTodoItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetTodoItems() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetTodoItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTodoItems(::grpc::ServerContext* /*context*/, const ::todo_item::GetTodoItemsRequest* /*request*/, ::todo_item::GetTodoItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTodoItems(::grpc::ServerContext* context, ::todo_item::GetTodoItemsRequest* request, ::grpc::ServerAsyncResponseWriter< ::todo_item::GetTodoItemsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateTodoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateTodoItem() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_CreateTodoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTodoItem(::grpc::ServerContext* /*context*/, const ::todo_item::CreateTodoItemRequest* /*request*/, ::todo_item::CreateTodoItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateTodoItem(::grpc::ServerContext* context, ::todo_item::CreateTodoItemRequest* request, ::grpc::ServerAsyncResponseWriter< ::todo_item::CreateTodoItemResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateTodoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateTodoItem() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_UpdateTodoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTodoItem(::grpc::ServerContext* /*context*/, const ::todo_item::UpdateTodoItemRequest* /*request*/, ::todo_item::UpdateTodoItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateTodoItem(::grpc::ServerContext* context, ::todo_item::UpdateTodoItemRequest* request, ::grpc::ServerAsyncResponseWriter< ::todo_item::UpdateTodoItemResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteTodoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteTodoItem() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_DeleteTodoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTodoItem(::grpc::ServerContext* /*context*/, const ::todo_item::DeleteTodoItemRequest* /*request*/, ::todo_item::DeleteTodoItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteTodoItem(::grpc::ServerContext* context, ::todo_item::DeleteTodoItemRequest* request, ::grpc::ServerAsyncResponseWriter< ::todo_item::DeleteTodoItemResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetTodoItems<WithAsyncMethod_CreateTodoItem<WithAsyncMethod_UpdateTodoItem<WithAsyncMethod_DeleteTodoItem<Service > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetTodoItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetTodoItems() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::todo_item::GetTodoItemsRequest, ::todo_item::GetTodoItemsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::todo_item::GetTodoItemsRequest* request, ::todo_item::GetTodoItemsResponse* response) { return this->GetTodoItems(context, request, response); }));}
    void SetMessageAllocatorFor_GetTodoItems(
        ::grpc::MessageAllocator< ::todo_item::GetTodoItemsRequest, ::todo_item::GetTodoItemsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::todo_item::GetTodoItemsRequest, ::todo_item::GetTodoItemsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetTodoItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTodoItems(::grpc::ServerContext* /*context*/, const ::todo_item::GetTodoItemsRequest* /*request*/, ::todo_item::GetTodoItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTodoItems(
      ::grpc::CallbackServerContext* /*context*/, const ::todo_item::GetTodoItemsRequest* /*request*/, ::todo_item::GetTodoItemsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateTodoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateTodoItem() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::todo_item::CreateTodoItemRequest, ::todo_item::CreateTodoItemResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::todo_item::CreateTodoItemRequest* request, ::todo_item::CreateTodoItemResponse* response) { return this->CreateTodoItem(context, request, response); }));}
    void SetMessageAllocatorFor_CreateTodoItem(
        ::grpc::MessageAllocator< ::todo_item::CreateTodoItemRequest, ::todo_item::CreateTodoItemResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::todo_item::CreateTodoItemRequest, ::todo_item::CreateTodoItemResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateTodoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTodoItem(::grpc::ServerContext* /*context*/, const ::todo_item::CreateTodoItemRequest* /*request*/, ::todo_item::CreateTodoItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateTodoItem(
      ::grpc::CallbackServerContext* /*context*/, const ::todo_item::CreateTodoItemRequest* /*request*/, ::todo_item::CreateTodoItemResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateTodoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateTodoItem() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::todo_item::UpdateTodoItemRequest, ::todo_item::UpdateTodoItemResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::todo_item::UpdateTodoItemRequest* request, ::todo_item::UpdateTodoItemResponse* response) { return this->UpdateTodoItem(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateTodoItem(
        ::grpc::MessageAllocator< ::todo_item::UpdateTodoItemRequest, ::todo_item::UpdateTodoItemResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::todo_item::UpdateTodoItemRequest, ::todo_item::UpdateTodoItemResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateTodoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTodoItem(::grpc::ServerContext* /*context*/, const ::todo_item::UpdateTodoItemRequest* /*request*/, ::todo_item::UpdateTodoItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateTodoItem(
      ::grpc::CallbackServerContext* /*context*/, const ::todo_item::UpdateTodoItemRequest* /*request*/, ::todo_item::UpdateTodoItemResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteTodoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteTodoItem() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::todo_item::DeleteTodoItemRequest, ::todo_item::DeleteTodoItemResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::todo_item::DeleteTodoItemRequest* request, ::todo_item::DeleteTodoItemResponse* response) { return this->DeleteTodoItem(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteTodoItem(
        ::grpc::MessageAllocator< ::todo_item::DeleteTodoItemRequest, ::todo_item::DeleteTodoItemResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::todo_item::DeleteTodoItemRequest, ::todo_item::DeleteTodoItemResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteTodoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTodoItem(::grpc::ServerContext* /*context*/, const ::todo_item::DeleteTodoItemRequest* /*request*/, ::todo_item::DeleteTodoItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteTodoItem(
      ::grpc::CallbackServerContext* /*context*/, const ::todo_item::DeleteTodoItemRequest* /*request*/, ::todo_item::DeleteTodoItemResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetTodoItems<WithCallbackMethod_CreateTodoItem<WithCallbackMethod_UpdateTodoItem<WithCallbackMethod_DeleteTodoItem<Service > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetTodoItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetTodoItems() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetTodoItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTodoItems(::grpc::ServerContext* /*context*/, const ::todo_item::GetTodoItemsRequest* /*request*/, ::todo_item::GetTodoItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateTodoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateTodoItem() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_CreateTodoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTodoItem(::grpc::ServerContext* /*context*/, const ::todo_item::CreateTodoItemRequest* /*request*/, ::todo_item::CreateTodoItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateTodoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateTodoItem() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_UpdateTodoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTodoItem(::grpc::ServerContext* /*context*/, const ::todo_item::UpdateTodoItemRequest* /*request*/, ::todo_item::UpdateTodoItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteTodoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteTodoItem() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_DeleteTodoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTodoItem(::grpc::ServerContext* /*context*/, const ::todo_item::DeleteTodoItemRequest* /*request*/, ::todo_item::DeleteTodoItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetTodoItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetTodoItems() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetTodoItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTodoItems(::grpc::ServerContext* /*context*/, const ::todo_item::GetTodoItemsRequest* /*request*/, ::todo_item::GetTodoItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTodoItems(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateTodoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateTodoItem() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_CreateTodoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTodoItem(::grpc::ServerContext* /*context*/, const ::todo_item::CreateTodoItemRequest* /*request*/, ::todo_item::CreateTodoItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateTodoItem(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateTodoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateTodoItem() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_UpdateTodoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTodoItem(::grpc::ServerContext* /*context*/, const ::todo_item::UpdateTodoItemRequest* /*request*/, ::todo_item::UpdateTodoItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateTodoItem(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteTodoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteTodoItem() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_DeleteTodoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTodoItem(::grpc::ServerContext* /*context*/, const ::todo_item::DeleteTodoItemRequest* /*request*/, ::todo_item::DeleteTodoItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteTodoItem(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetTodoItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetTodoItems() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetTodoItems(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetTodoItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTodoItems(::grpc::ServerContext* /*context*/, const ::todo_item::GetTodoItemsRequest* /*request*/, ::todo_item::GetTodoItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTodoItems(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateTodoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateTodoItem() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateTodoItem(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateTodoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTodoItem(::grpc::ServerContext* /*context*/, const ::todo_item::CreateTodoItemRequest* /*request*/, ::todo_item::CreateTodoItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateTodoItem(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateTodoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateTodoItem() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateTodoItem(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateTodoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTodoItem(::grpc::ServerContext* /*context*/, const ::todo_item::UpdateTodoItemRequest* /*request*/, ::todo_item::UpdateTodoItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateTodoItem(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteTodoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteTodoItem() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteTodoItem(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteTodoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTodoItem(::grpc::ServerContext* /*context*/, const ::todo_item::DeleteTodoItemRequest* /*request*/, ::todo_item::DeleteTodoItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteTodoItem(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetTodoItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetTodoItems() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::todo_item::GetTodoItemsRequest, ::todo_item::GetTodoItemsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::todo_item::GetTodoItemsRequest, ::todo_item::GetTodoItemsResponse>* streamer) {
                       return this->StreamedGetTodoItems(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetTodoItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetTodoItems(::grpc::ServerContext* /*context*/, const ::todo_item::GetTodoItemsRequest* /*request*/, ::todo_item::GetTodoItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetTodoItems(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::todo_item::GetTodoItemsRequest,::todo_item::GetTodoItemsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateTodoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateTodoItem() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::todo_item::CreateTodoItemRequest, ::todo_item::CreateTodoItemResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::todo_item::CreateTodoItemRequest, ::todo_item::CreateTodoItemResponse>* streamer) {
                       return this->StreamedCreateTodoItem(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateTodoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateTodoItem(::grpc::ServerContext* /*context*/, const ::todo_item::CreateTodoItemRequest* /*request*/, ::todo_item::CreateTodoItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateTodoItem(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::todo_item::CreateTodoItemRequest,::todo_item::CreateTodoItemResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateTodoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateTodoItem() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::todo_item::UpdateTodoItemRequest, ::todo_item::UpdateTodoItemResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::todo_item::UpdateTodoItemRequest, ::todo_item::UpdateTodoItemResponse>* streamer) {
                       return this->StreamedUpdateTodoItem(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateTodoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateTodoItem(::grpc::ServerContext* /*context*/, const ::todo_item::UpdateTodoItemRequest* /*request*/, ::todo_item::UpdateTodoItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateTodoItem(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::todo_item::UpdateTodoItemRequest,::todo_item::UpdateTodoItemResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteTodoItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteTodoItem() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::todo_item::DeleteTodoItemRequest, ::todo_item::DeleteTodoItemResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::todo_item::DeleteTodoItemRequest, ::todo_item::DeleteTodoItemResponse>* streamer) {
                       return this->StreamedDeleteTodoItem(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteTodoItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteTodoItem(::grpc::ServerContext* /*context*/, const ::todo_item::DeleteTodoItemRequest* /*request*/, ::todo_item::DeleteTodoItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteTodoItem(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::todo_item::DeleteTodoItemRequest,::todo_item::DeleteTodoItemResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetTodoItems<WithStreamedUnaryMethod_CreateTodoItem<WithStreamedUnaryMethod_UpdateTodoItem<WithStreamedUnaryMethod_DeleteTodoItem<Service > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetTodoItems<WithStreamedUnaryMethod_CreateTodoItem<WithStreamedUnaryMethod_UpdateTodoItem<WithStreamedUnaryMethod_DeleteTodoItem<Service > > > > StreamedService;
};

}  // namespace todo_item


#endif  // GRPC_todo_5fitem_2eproto__INCLUDED
