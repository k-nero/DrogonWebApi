// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: todo_list.proto
#ifndef GRPC_todo_5flist_2eproto__INCLUDED
#define GRPC_todo_5flist_2eproto__INCLUDED

#include "todo_list.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace todo_list {

class TodoListService final {
 public:
  static constexpr char const* service_full_name() {
    return "todo_list.TodoListService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status AddTodoList(::grpc::ClientContext* context, const ::todo_list::AddTodoRequest& request, ::todo_list::AddTodoListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::AddTodoListResponse>> AsyncAddTodoList(::grpc::ClientContext* context, const ::todo_list::AddTodoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::AddTodoListResponse>>(AsyncAddTodoListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::AddTodoListResponse>> PrepareAsyncAddTodoList(::grpc::ClientContext* context, const ::todo_list::AddTodoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::AddTodoListResponse>>(PrepareAsyncAddTodoListRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateTodoList(::grpc::ClientContext* context, const ::todo_list::UpdateTodoRequest& request, ::todo_list::UpdateTodoListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::UpdateTodoListResponse>> AsyncUpdateTodoList(::grpc::ClientContext* context, const ::todo_list::UpdateTodoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::UpdateTodoListResponse>>(AsyncUpdateTodoListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::UpdateTodoListResponse>> PrepareAsyncUpdateTodoList(::grpc::ClientContext* context, const ::todo_list::UpdateTodoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::UpdateTodoListResponse>>(PrepareAsyncUpdateTodoListRaw(context, request, cq));
    }
    virtual ::grpc::Status GetTodoList(::grpc::ClientContext* context, const ::todo_list::GetTodoListRequest& request, ::todo_list::GetTodoListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::GetTodoListResponse>> AsyncGetTodoList(::grpc::ClientContext* context, const ::todo_list::GetTodoListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::GetTodoListResponse>>(AsyncGetTodoListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::GetTodoListResponse>> PrepareAsyncGetTodoList(::grpc::ClientContext* context, const ::todo_list::GetTodoListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::GetTodoListResponse>>(PrepareAsyncGetTodoListRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteTodoList(::grpc::ClientContext* context, const ::todo_list::DeleteTodoRequest& request, ::todo_list::DeleteTodoListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::DeleteTodoListResponse>> AsyncDeleteTodoList(::grpc::ClientContext* context, const ::todo_list::DeleteTodoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::DeleteTodoListResponse>>(AsyncDeleteTodoListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::DeleteTodoListResponse>> PrepareAsyncDeleteTodoList(::grpc::ClientContext* context, const ::todo_list::DeleteTodoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::DeleteTodoListResponse>>(PrepareAsyncDeleteTodoListRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void AddTodoList(::grpc::ClientContext* context, const ::todo_list::AddTodoRequest* request, ::todo_list::AddTodoListResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddTodoList(::grpc::ClientContext* context, const ::todo_list::AddTodoRequest* request, ::todo_list::AddTodoListResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateTodoList(::grpc::ClientContext* context, const ::todo_list::UpdateTodoRequest* request, ::todo_list::UpdateTodoListResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateTodoList(::grpc::ClientContext* context, const ::todo_list::UpdateTodoRequest* request, ::todo_list::UpdateTodoListResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetTodoList(::grpc::ClientContext* context, const ::todo_list::GetTodoListRequest* request, ::todo_list::GetTodoListResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetTodoList(::grpc::ClientContext* context, const ::todo_list::GetTodoListRequest* request, ::todo_list::GetTodoListResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteTodoList(::grpc::ClientContext* context, const ::todo_list::DeleteTodoRequest* request, ::todo_list::DeleteTodoListResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteTodoList(::grpc::ClientContext* context, const ::todo_list::DeleteTodoRequest* request, ::todo_list::DeleteTodoListResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::AddTodoListResponse>* AsyncAddTodoListRaw(::grpc::ClientContext* context, const ::todo_list::AddTodoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::AddTodoListResponse>* PrepareAsyncAddTodoListRaw(::grpc::ClientContext* context, const ::todo_list::AddTodoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::UpdateTodoListResponse>* AsyncUpdateTodoListRaw(::grpc::ClientContext* context, const ::todo_list::UpdateTodoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::UpdateTodoListResponse>* PrepareAsyncUpdateTodoListRaw(::grpc::ClientContext* context, const ::todo_list::UpdateTodoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::GetTodoListResponse>* AsyncGetTodoListRaw(::grpc::ClientContext* context, const ::todo_list::GetTodoListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::GetTodoListResponse>* PrepareAsyncGetTodoListRaw(::grpc::ClientContext* context, const ::todo_list::GetTodoListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::DeleteTodoListResponse>* AsyncDeleteTodoListRaw(::grpc::ClientContext* context, const ::todo_list::DeleteTodoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::todo_list::DeleteTodoListResponse>* PrepareAsyncDeleteTodoListRaw(::grpc::ClientContext* context, const ::todo_list::DeleteTodoRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status AddTodoList(::grpc::ClientContext* context, const ::todo_list::AddTodoRequest& request, ::todo_list::AddTodoListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_list::AddTodoListResponse>> AsyncAddTodoList(::grpc::ClientContext* context, const ::todo_list::AddTodoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_list::AddTodoListResponse>>(AsyncAddTodoListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_list::AddTodoListResponse>> PrepareAsyncAddTodoList(::grpc::ClientContext* context, const ::todo_list::AddTodoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_list::AddTodoListResponse>>(PrepareAsyncAddTodoListRaw(context, request, cq));
    }
    ::grpc::Status UpdateTodoList(::grpc::ClientContext* context, const ::todo_list::UpdateTodoRequest& request, ::todo_list::UpdateTodoListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_list::UpdateTodoListResponse>> AsyncUpdateTodoList(::grpc::ClientContext* context, const ::todo_list::UpdateTodoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_list::UpdateTodoListResponse>>(AsyncUpdateTodoListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_list::UpdateTodoListResponse>> PrepareAsyncUpdateTodoList(::grpc::ClientContext* context, const ::todo_list::UpdateTodoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_list::UpdateTodoListResponse>>(PrepareAsyncUpdateTodoListRaw(context, request, cq));
    }
    ::grpc::Status GetTodoList(::grpc::ClientContext* context, const ::todo_list::GetTodoListRequest& request, ::todo_list::GetTodoListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_list::GetTodoListResponse>> AsyncGetTodoList(::grpc::ClientContext* context, const ::todo_list::GetTodoListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_list::GetTodoListResponse>>(AsyncGetTodoListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_list::GetTodoListResponse>> PrepareAsyncGetTodoList(::grpc::ClientContext* context, const ::todo_list::GetTodoListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_list::GetTodoListResponse>>(PrepareAsyncGetTodoListRaw(context, request, cq));
    }
    ::grpc::Status DeleteTodoList(::grpc::ClientContext* context, const ::todo_list::DeleteTodoRequest& request, ::todo_list::DeleteTodoListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_list::DeleteTodoListResponse>> AsyncDeleteTodoList(::grpc::ClientContext* context, const ::todo_list::DeleteTodoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_list::DeleteTodoListResponse>>(AsyncDeleteTodoListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_list::DeleteTodoListResponse>> PrepareAsyncDeleteTodoList(::grpc::ClientContext* context, const ::todo_list::DeleteTodoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::todo_list::DeleteTodoListResponse>>(PrepareAsyncDeleteTodoListRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void AddTodoList(::grpc::ClientContext* context, const ::todo_list::AddTodoRequest* request, ::todo_list::AddTodoListResponse* response, std::function<void(::grpc::Status)>) override;
      void AddTodoList(::grpc::ClientContext* context, const ::todo_list::AddTodoRequest* request, ::todo_list::AddTodoListResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateTodoList(::grpc::ClientContext* context, const ::todo_list::UpdateTodoRequest* request, ::todo_list::UpdateTodoListResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateTodoList(::grpc::ClientContext* context, const ::todo_list::UpdateTodoRequest* request, ::todo_list::UpdateTodoListResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetTodoList(::grpc::ClientContext* context, const ::todo_list::GetTodoListRequest* request, ::todo_list::GetTodoListResponse* response, std::function<void(::grpc::Status)>) override;
      void GetTodoList(::grpc::ClientContext* context, const ::todo_list::GetTodoListRequest* request, ::todo_list::GetTodoListResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteTodoList(::grpc::ClientContext* context, const ::todo_list::DeleteTodoRequest* request, ::todo_list::DeleteTodoListResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteTodoList(::grpc::ClientContext* context, const ::todo_list::DeleteTodoRequest* request, ::todo_list::DeleteTodoListResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::todo_list::AddTodoListResponse>* AsyncAddTodoListRaw(::grpc::ClientContext* context, const ::todo_list::AddTodoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::todo_list::AddTodoListResponse>* PrepareAsyncAddTodoListRaw(::grpc::ClientContext* context, const ::todo_list::AddTodoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::todo_list::UpdateTodoListResponse>* AsyncUpdateTodoListRaw(::grpc::ClientContext* context, const ::todo_list::UpdateTodoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::todo_list::UpdateTodoListResponse>* PrepareAsyncUpdateTodoListRaw(::grpc::ClientContext* context, const ::todo_list::UpdateTodoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::todo_list::GetTodoListResponse>* AsyncGetTodoListRaw(::grpc::ClientContext* context, const ::todo_list::GetTodoListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::todo_list::GetTodoListResponse>* PrepareAsyncGetTodoListRaw(::grpc::ClientContext* context, const ::todo_list::GetTodoListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::todo_list::DeleteTodoListResponse>* AsyncDeleteTodoListRaw(::grpc::ClientContext* context, const ::todo_list::DeleteTodoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::todo_list::DeleteTodoListResponse>* PrepareAsyncDeleteTodoListRaw(::grpc::ClientContext* context, const ::todo_list::DeleteTodoRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_AddTodoList_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateTodoList_;
    const ::grpc::internal::RpcMethod rpcmethod_GetTodoList_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteTodoList_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status AddTodoList(::grpc::ServerContext* context, const ::todo_list::AddTodoRequest* request, ::todo_list::AddTodoListResponse* response);
    virtual ::grpc::Status UpdateTodoList(::grpc::ServerContext* context, const ::todo_list::UpdateTodoRequest* request, ::todo_list::UpdateTodoListResponse* response);
    virtual ::grpc::Status GetTodoList(::grpc::ServerContext* context, const ::todo_list::GetTodoListRequest* request, ::todo_list::GetTodoListResponse* response);
    virtual ::grpc::Status DeleteTodoList(::grpc::ServerContext* context, const ::todo_list::DeleteTodoRequest* request, ::todo_list::DeleteTodoListResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_AddTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddTodoList() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_AddTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::AddTodoRequest* /*request*/, ::todo_list::AddTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddTodoList(::grpc::ServerContext* context, ::todo_list::AddTodoRequest* request, ::grpc::ServerAsyncResponseWriter< ::todo_list::AddTodoListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateTodoList() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_UpdateTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::UpdateTodoRequest* /*request*/, ::todo_list::UpdateTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateTodoList(::grpc::ServerContext* context, ::todo_list::UpdateTodoRequest* request, ::grpc::ServerAsyncResponseWriter< ::todo_list::UpdateTodoListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetTodoList() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::GetTodoListRequest* /*request*/, ::todo_list::GetTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTodoList(::grpc::ServerContext* context, ::todo_list::GetTodoListRequest* request, ::grpc::ServerAsyncResponseWriter< ::todo_list::GetTodoListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteTodoList() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_DeleteTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::DeleteTodoRequest* /*request*/, ::todo_list::DeleteTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteTodoList(::grpc::ServerContext* context, ::todo_list::DeleteTodoRequest* request, ::grpc::ServerAsyncResponseWriter< ::todo_list::DeleteTodoListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_AddTodoList<WithAsyncMethod_UpdateTodoList<WithAsyncMethod_GetTodoList<WithAsyncMethod_DeleteTodoList<Service > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_AddTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddTodoList() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::todo_list::AddTodoRequest, ::todo_list::AddTodoListResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::todo_list::AddTodoRequest* request, ::todo_list::AddTodoListResponse* response) { return this->AddTodoList(context, request, response); }));}
    void SetMessageAllocatorFor_AddTodoList(
        ::grpc::MessageAllocator< ::todo_list::AddTodoRequest, ::todo_list::AddTodoListResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::todo_list::AddTodoRequest, ::todo_list::AddTodoListResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::AddTodoRequest* /*request*/, ::todo_list::AddTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddTodoList(
      ::grpc::CallbackServerContext* /*context*/, const ::todo_list::AddTodoRequest* /*request*/, ::todo_list::AddTodoListResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateTodoList() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::todo_list::UpdateTodoRequest, ::todo_list::UpdateTodoListResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::todo_list::UpdateTodoRequest* request, ::todo_list::UpdateTodoListResponse* response) { return this->UpdateTodoList(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateTodoList(
        ::grpc::MessageAllocator< ::todo_list::UpdateTodoRequest, ::todo_list::UpdateTodoListResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::todo_list::UpdateTodoRequest, ::todo_list::UpdateTodoListResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::UpdateTodoRequest* /*request*/, ::todo_list::UpdateTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateTodoList(
      ::grpc::CallbackServerContext* /*context*/, const ::todo_list::UpdateTodoRequest* /*request*/, ::todo_list::UpdateTodoListResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetTodoList() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::todo_list::GetTodoListRequest, ::todo_list::GetTodoListResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::todo_list::GetTodoListRequest* request, ::todo_list::GetTodoListResponse* response) { return this->GetTodoList(context, request, response); }));}
    void SetMessageAllocatorFor_GetTodoList(
        ::grpc::MessageAllocator< ::todo_list::GetTodoListRequest, ::todo_list::GetTodoListResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::todo_list::GetTodoListRequest, ::todo_list::GetTodoListResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::GetTodoListRequest* /*request*/, ::todo_list::GetTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTodoList(
      ::grpc::CallbackServerContext* /*context*/, const ::todo_list::GetTodoListRequest* /*request*/, ::todo_list::GetTodoListResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteTodoList() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::todo_list::DeleteTodoRequest, ::todo_list::DeleteTodoListResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::todo_list::DeleteTodoRequest* request, ::todo_list::DeleteTodoListResponse* response) { return this->DeleteTodoList(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteTodoList(
        ::grpc::MessageAllocator< ::todo_list::DeleteTodoRequest, ::todo_list::DeleteTodoListResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::todo_list::DeleteTodoRequest, ::todo_list::DeleteTodoListResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::DeleteTodoRequest* /*request*/, ::todo_list::DeleteTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteTodoList(
      ::grpc::CallbackServerContext* /*context*/, const ::todo_list::DeleteTodoRequest* /*request*/, ::todo_list::DeleteTodoListResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_AddTodoList<WithCallbackMethod_UpdateTodoList<WithCallbackMethod_GetTodoList<WithCallbackMethod_DeleteTodoList<Service > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_AddTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddTodoList() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_AddTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::AddTodoRequest* /*request*/, ::todo_list::AddTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateTodoList() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_UpdateTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::UpdateTodoRequest* /*request*/, ::todo_list::UpdateTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetTodoList() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::GetTodoListRequest* /*request*/, ::todo_list::GetTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteTodoList() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_DeleteTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::DeleteTodoRequest* /*request*/, ::todo_list::DeleteTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddTodoList() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_AddTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::AddTodoRequest* /*request*/, ::todo_list::AddTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddTodoList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateTodoList() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_UpdateTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::UpdateTodoRequest* /*request*/, ::todo_list::UpdateTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateTodoList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetTodoList() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::GetTodoListRequest* /*request*/, ::todo_list::GetTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTodoList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteTodoList() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_DeleteTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::DeleteTodoRequest* /*request*/, ::todo_list::DeleteTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteTodoList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddTodoList() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddTodoList(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::AddTodoRequest* /*request*/, ::todo_list::AddTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddTodoList(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateTodoList() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateTodoList(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::UpdateTodoRequest* /*request*/, ::todo_list::UpdateTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateTodoList(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetTodoList() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetTodoList(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::GetTodoListRequest* /*request*/, ::todo_list::GetTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTodoList(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteTodoList() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteTodoList(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::DeleteTodoRequest* /*request*/, ::todo_list::DeleteTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteTodoList(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddTodoList() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::todo_list::AddTodoRequest, ::todo_list::AddTodoListResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::todo_list::AddTodoRequest, ::todo_list::AddTodoListResponse>* streamer) {
                       return this->StreamedAddTodoList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::AddTodoRequest* /*request*/, ::todo_list::AddTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddTodoList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::todo_list::AddTodoRequest,::todo_list::AddTodoListResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateTodoList() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::todo_list::UpdateTodoRequest, ::todo_list::UpdateTodoListResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::todo_list::UpdateTodoRequest, ::todo_list::UpdateTodoListResponse>* streamer) {
                       return this->StreamedUpdateTodoList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::UpdateTodoRequest* /*request*/, ::todo_list::UpdateTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateTodoList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::todo_list::UpdateTodoRequest,::todo_list::UpdateTodoListResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetTodoList() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::todo_list::GetTodoListRequest, ::todo_list::GetTodoListResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::todo_list::GetTodoListRequest, ::todo_list::GetTodoListResponse>* streamer) {
                       return this->StreamedGetTodoList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::GetTodoListRequest* /*request*/, ::todo_list::GetTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetTodoList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::todo_list::GetTodoListRequest,::todo_list::GetTodoListResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteTodoList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteTodoList() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::todo_list::DeleteTodoRequest, ::todo_list::DeleteTodoListResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::todo_list::DeleteTodoRequest, ::todo_list::DeleteTodoListResponse>* streamer) {
                       return this->StreamedDeleteTodoList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteTodoList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteTodoList(::grpc::ServerContext* /*context*/, const ::todo_list::DeleteTodoRequest* /*request*/, ::todo_list::DeleteTodoListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteTodoList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::todo_list::DeleteTodoRequest,::todo_list::DeleteTodoListResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_AddTodoList<WithStreamedUnaryMethod_UpdateTodoList<WithStreamedUnaryMethod_GetTodoList<WithStreamedUnaryMethod_DeleteTodoList<Service > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_AddTodoList<WithStreamedUnaryMethod_UpdateTodoList<WithStreamedUnaryMethod_GetTodoList<WithStreamedUnaryMethod_DeleteTodoList<Service > > > > StreamedService;
};

}  // namespace todo_list


#endif  // GRPC_todo_5flist_2eproto__INCLUDED
